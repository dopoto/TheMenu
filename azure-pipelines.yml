# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- mainx

pool:
  vmImage: ubuntu-latest

variables:
- group: PROD
- name: buildConfiguration
  value: 'Release'
- name: dotNetFramework
  value: 'net6.0'
- name: dotNetVersion
  value: '6.0.x'
- name: targetRuntime
  value: 'linux-x64'
- name: azureSPNName
  value: 'azure-service-connection' # AzureDevOps portal > [Your Project] > Settings | Initially defined in Azure Portal > App Registrations. See https://subhankarsarkar.com/dot-net6-azure-web-app-deployment-using-azure-devops-pipeline/
#  azureAppServiceName: 'the-menu-backend-02' #get it from your Azure portal

steps:

# v1 
# ERROR
# /usr/share/dotnet/sdk/5.0.401/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.TargetFrameworkInference.targets(141,5): error NETSDK1045: 
# The current .NET SDK does not support targeting .NET 6.0.  Either target .NET 5.0 or lower, or use a version of the .NET SDK that supports .NET 6.0. [/home/vsts/work/1/s/BackEnd/BackEnd.csproj]


# v2 
# # ERROR System.ArgumentException: The string argument 'connectionString' cannot be empty.
# Finding DbContext classes...
# Finding IDesignTimeDbContextFactory implementations...
# Finding application service provider in assembly 'TheMenu.BackEnd'...
# Finding Microsoft.Extensions.Hosting service provider...
# Using environment 'Development'.
# Using application service provider from Microsoft.Extensions.Hosting.
# System.ArgumentException: The string argument 'connectionString' cannot be empty.
#    at Microsoft.EntityFrameworkCore.Utilities.Check.NotEmpty(String value, String parameterName)


# - task: UseDotNet@2
#   displayName: 'Use .NET Core sdk'
#   inputs:
#     packageType: 'sdk'
#     version: '6.0.x'
#     includePreviewVersions: true
    
# - task: CmdLine@2
#   displayName: 'Execute EF Migrations'
#   inputs:
#     script: |
#       nuget locals http-cache -clear
#       dotnet new tool-manifest
#       dotnet tool install --global dotnet-ef --version 6.0.0
#       dotnet tool update --global dotnet-ef --version 6.0.0
# #      dotnet tool restore --interactive

# - task: efcore-migration-script-generator-task@1
#   inputs:
#     installdependencies: true
#     projectpath: '$(Build.SourcesDirectory)/BackEnd/BackEnd.csproj'
#     databasecontexts: 'TheMenuBackEndContext'
#     startupprojectpath: '$(Build.SourcesDirectory)/BackEnd'
#     targetfolder: '$(build.artifactstagingdirectory)/migrations'


# v2.1
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    includePreviewVersions: true
    
- task: CmdLine@2
  displayName: 'Execute EF Migrations'
  inputs:
    script: |
      nuget locals http-cache -clear
      dotnet new tool-manifest
      dotnet tool install --global dotnet-ef --version 6.0.0
      dotnet tool update --global dotnet-ef --version 6.0.0
      dotnet ef migrations bundle --project BackEnd --connectionString '$(ConnectionStrings.AppDbContextConnection)'


# v2.2
# ERROR
# /usr/bin/bash --noprofile --norc /home/vsts/work/_temp/f2174772-a5b0-4027-9fd1-40ab7e09e1be.sh
# Clearing NuGet HTTP cache: /home/vsts/.local/share/NuGet/v3-cache
# Local resources cleared.
# Getting ready...
# Creating this template will make changes to existing files:
#   Overwrite   ./.config/dotnet-tools.json
# Rerun the command and pass --force to accept and create.
# You can invoke the tool using the following command: dotnet-ef
# Tool 'dotnet-ef' (version '6.0.0-preview.7.21378.4') was successfully installed.
# Tool 'dotnet-ef' was reinstalled with the latest stable version (version '6.0.0-preview.7.21378.4').
# Run "dotnet tool restore" to make the "dotnet-ef" command available.
# ##[error]Bash exited with code '1'.
# Finishing: Execute EF Migrations

# - task: CmdLine@2
#   displayName: 'Execute EF Migrations'
#   inputs:
#     script: |
#       nuget locals http-cache -clear
#       dotnet new tool-manifest
#       dotnet tool install --global dotnet-ef --version 6.0.0-rc.1.21452.10
#       dotnet tool update --global dotnet-ef --version 6.0.0-rc.1.21452.10
#       dotnet ef migrations bundle
#     workingDirectory: '$(System.DefaultWorkingDirectory)/BackEnd'


# v3.1
# ERROR
# /usr/bin/bash --noprofile --norc /home/vsts/work/_temp/2920355d-83c8-4f91-a8ca-9a74a6494688.sh
# Getting ready...
# Creating this template will make changes to existing files:
#   Overwrite   ./.config/dotnet-tools.json
# Rerun the command and pass --force to accept and create.
# You can invoke the tool using the following command: dotnet-ef
# Tool 'dotnet-ef' (version '6.0.0-rc.1.21452.10') was successfully installed.
# Tool 'dotnet-ef' was reinstalled with the latest stable version (version '6.0.0-rc.1.21452.10').
#   Determining projects to restore...
#   Restored /tmp/3t4nnoca.gbf/restore.csproj (in 476 ms).
# Tool 'dotnet-ef' (version '5.0.10') was restored. Available commands: dotnet-ef
# Restore was successful.
# Build started...
# Build failed. Use dotnet build to see the errors.
# ##[error]Bash exited with code '1'.

# - task: CmdLine@2
#   displayName: 'Execute EF Migrations 3.1'
#   inputs:
#     script: |
#       dotnet new tool-manifest
#       dotnet tool install --global dotnet-ef --version 6.0.0-rc.1.21452.10
#       dotnet tool update --global dotnet-ef --version 6.0.0-rc.1.21452.10
#       dotnet tool restore --interactive
#       dotnet ef migrations bundle
#     workingDirectory: '$(System.DefaultWorkingDirectory)/BackEnd'

# v5.7
# The Entity Framework tools version '5.0.10' is older than that of the runtime '6.0.0-rc.1.21452.10'. Update the tools for the latest features and bug fixes. See https://aka.ms/AAc1fbw for more information.
# System.ArgumentException: The string argument 'connectionString' cannot be empty.
#    at Microsoft.EntityFrameworkCore.Utilities.Check.NotEmpty(String value, String parameterName)
#    at Microsoft.EntityFrameworkCore.SqlServerDbContextOptionsExtensions.UseSqlServer(DbContextOptionsBuilder optionsBuilder, String connectionString, Action`1 sqlServerOptionsAction)
#    at Program.<>c__DisplayClass0_0.<<Main>$>b__0(DbContextOptionsBuilder options) in /home/vsts/work/1/s/BackEnd/Program.cs:line 18
# - task: UseDotNet@2
#   inputs:
#     version: $(dotNetVersion)
#     includePreviewVersions: true
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'Build .NET 6 Application'
# - task: CmdLine@2
#   displayName: 'Execute EF Migrations 5.7'
#   inputs:
#     script: |
#       dotnet tool install --global dotnet-ef --version 6.0.0-rc.1.21452.10
#       dotnet tool update --global dotnet-ef --version 6.0.0-rc.1.21452.10
#       dotnet tool restore
#       dotnet build
#       dotnet ef migrations script â€“startup-project $(Build.SourcesDirectory)\BackEnd -o $(build.artifactstagingdirectory)\migrations\scripts.sql -i
#     workingDirectory: '$(System.DefaultWorkingDirectory)/BackEnd'


# v6.1
# /usr/bin/bash --noprofile --norc /home/vsts/work/_temp/2619a099-9090-41ba-853d-64b4b7562f7b.sh
# Creating this template will make changes to existing files:
#   Overwrite   ./.config/dotnet-tools.json

# Rerun the command and pass --force to accept and create.
# You can invoke the tool using the following command: dotnet-ef
# Tool 'dotnet-ef' (version '6.0.0-rc.1.21452.10') was successfully installed.
# Tool 'dotnet-ef' was reinstalled with the latest stable version (version '6.0.0-rc.1.21452.10').
# Tool 'dotnet-ef' (version '5.0.10') was restored. Available commands: dotnet-ef

# Restore was successful.
# Build started...
# Build succeeded.
# Specify --help for a list of available options and commands.
# Unrecognized command or argument 'bundle'.
# ##[error]Bash exited with code '1'.
# - task: UseDotNet@2
#   inputs:
#     version: $(dotNetVersion)
#     includePreviewVersions: true
# - script: dotnet build --configuration $(buildConfiguration)
# - task: CmdLine@2
#   displayName: 'Execute EF Migrations 6.1'
#   inputs:
#     script: |
#       dotnet new tool-manifest
#       dotnet tool install --global dotnet-ef --version 6.0.0-rc.1.21452.10
#       dotnet tool update --global dotnet-ef --version 6.0.0-rc.1.21452.10
#       dotnet tool restore --interactive
#       dotnet ef migrations bundle
#     workingDirectory: '$(System.DefaultWorkingDirectory)/BackEnd'

# v6.2
# ERROR
# /usr/bin/bash --noprofile --norc /home/vsts/work/_temp/32(...).sh
# Creating this template will make changes to existing files:
#   Overwrite   ./.config/dotnet-tools.json
# Rerun the command and pass --force to accept and create.
# You can invoke the tool using the following command: dotnet-ef
# Tool 'dotnet-ef' (version '6.0.0-rc.1.21452.10') was successfully installed.
# Tool 'dotnet-ef' was reinstalled with the latest stable version (version '6.0.0-rc.1.21452.10').
# Run "dotnet tool restore" to make the "dotnet-ef" command available.
# ##[error]Bash exited with code '1'.
# - task: UseDotNet@2
#   inputs:
#     version: $(dotNetVersion)
#     includePreviewVersions: true
# - script: dotnet build --configuration $(buildConfiguration)
# - task: CmdLine@2
#   displayName: 'Execute EF Migrations 6.2'
#   inputs:
#     script: |
#       dotnet new tool-manifest
#       dotnet tool install --global dotnet-ef
#       dotnet tool update --global dotnet-ef
#       dotnet ef migrations bundle
#     workingDirectory: '$(System.DefaultWorkingDirectory)/BackEnd'